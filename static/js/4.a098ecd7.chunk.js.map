{"version":3,"sources":["redux/shop/shop-selectors.js","components/with-spinner/WithSpinner.jsx","components/collection-item/CollectionItem.styles.jsx","components/collection-item/CollectionItem.jsx","pages/collection/CollectionPage.styles.jsx","pages/collection/CollectionPage.jsx","pages/collection/CollectionPage.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","WithSpinner","WrappedComponent","isLoading","otherprops","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","ownProps","collection","match","params","collectionId","title","items","CollectionItem","id","mapStateToProps","createStructuredSelector","compose","CollectionPage"],"mappings":"qHAAA,oJAEMA,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAEvBC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKG,eAGJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OACEA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAACC,GAAD,OAASL,EAAYK,MAAQ,MAG/DC,EAAmB,SAACC,GAAD,OAC9BR,YAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYO,GAAsB,SAGvCC,EAA6BT,YACxC,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKY,cAGJC,EAA4BX,YACvC,CAACJ,IACD,SAACE,GAAD,QAAYA,EAAKG,gB,yECjBJW,IALb,SAACC,GAAD,OACA,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,6BAChC,OAAOD,EAAY,cAAC,IAAD,IAAc,cAACD,EAAD,eAAsBE,O,6FCJ9CC,EAA0BC,IAAOC,IAAV,kdA6BvBC,EAAYF,YAAOG,IAAPH,CAAH,wPAcTI,EAAkBJ,IAAOC,IAAV,wKAMN,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,oIAQzBM,EAAgBP,IAAOQ,KAAV,mEAKbC,EAAiBT,IAAOQ,KAAV,iE,OChCZE,gBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAUF,EAASC,YAAQC,QAGvBH,EArBQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SAErB,OACE,eAACN,EAAD,WACE,cAACK,EAAD,CAAiBY,UAAU,QAAQX,SAAUA,IAC7C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBO,IAChB,cAACL,EAAD,UAAiBM,OAEnB,cAACb,EAAD,CAAWe,QAAS,kBAAML,EAAQC,IAAOK,UAAQ,EAAjD,gC,wHCvBOC,EAA0BnB,IAAOC,IAAV,yEAKvBmB,EAAkBpB,IAAOqB,GAAV,wEAKfC,EAA2BtB,IAAOC,IAAV,gR,OCkBtBS,eAJS,SAAC9B,EAAO2C,GAAR,MAAsB,CAC5CC,WAAYlC,YAAiBiC,EAASE,MAAMC,OAAOC,aAAvCrC,CAAqDV,MAGpD8B,EAjBQ,SAAC,GAAoB,IAAD,IAAjBc,YACe,GAA/BI,EADiC,EACjCA,MAAOC,EAD0B,EAC1BA,MACf,OACE,eAACV,EAAD,WACE,cAACC,EAAD,UAAkBQ,IAClB,cAACN,EAAD,UACGO,GACCA,EAAMzC,KAAI,SAACyB,GAAD,OAAU,cAACiB,EAAA,EAAD,CAA8BjB,KAAMA,GAAfA,EAAKkB,eCZlDC,EAAkBC,YAAyB,CAC/CpC,UAAW,SAACjB,GAAD,OAAYc,YAA0Bd,MAG7CuC,EAA0Be,YAC9BxB,YAAQsB,GACRrC,IAF8BuC,CAG9BC,GAEahB","file":"static/js/4.a098ecd7.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nconst selectShop = (state) => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n  [selectCollections],\r\n  (collections) =>\r\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\r\n);\r\n\r\nexport const selectCollection = (collectionUrlParam) =>\r\n  createSelector([selectCollections], (collections) =>\r\n    collections ? collections[collectionUrlParam] : null\r\n  );\r\n\r\nexport const selectIsCollectionFetching = createSelector(\r\n  [selectShop],\r\n  (shop) => shop.isFetching\r\n);\r\n\r\nexport const selectIsCollectionsLoaded = createSelector(\r\n  [selectShop],\r\n  (shop) => !!shop.collections\r\n);\r\n","import React from \"react\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nconst WithSpinner =\r\n  (WrappedComponent) =>\r\n  ({ isLoading, ...otherprops }) => {\r\n    return isLoading ? <Spinner /> : <WrappedComponent {...otherprops} />;\r\n  };\r\n\r\nexport default WithSpinner;\r\n","import styled from \"styled-components\";\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CustomButton from \"../custom-button/CustomButton\";\r\nimport { addItem } from \"../../redux/cart/cart-actions\";\r\n\r\nimport {\r\n  CollectionItemContainer,\r\n  CollectionFooterContainer,\r\n  AddButton,\r\n  BackgroundImage,\r\n  NameContainer,\r\n  PriceContainer,\r\n} from \"./CollectionItem.styles\";\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n  const { name, price, imageUrl } = item;\r\n\r\n  return (\r\n    <CollectionItemContainer>\r\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\r\n      <CollectionFooterContainer>\r\n        <NameContainer>{name}</NameContainer>\r\n        <PriceContainer>{price}</PriceContainer>\r\n      </CollectionFooterContainer>\r\n      <AddButton onClick={() => addItem(item)} inverted>\r\n        Add to cart\r\n      </AddButton>\r\n    </CollectionItemContainer>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addItem: (item) => dispatch(addItem(item)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  & > div {\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    margin: 0 auto;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionItem from \"../../components/collection-item/CollectionItem\";\r\n\r\nimport { selectCollection } from \"../../redux/shop/shop-selectors\";\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer,\r\n} from \"./CollectionPage.styles\";\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  const { title, items } = collection || {};\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items &&\r\n          items.map((item) => <CollectionItem key={item.id} item={item} />)}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop-selectors\";\r\nimport WithSpinner from \"../../components/with-spinner/WithSpinner\";\r\nimport CollectionPage from \"./CollectionPage\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: (state) => !selectIsCollectionsLoaded(state),\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n"],"sourceRoot":""}